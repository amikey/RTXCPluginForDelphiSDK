// ************************************************************************ //
// WARNING
// -------
// This file is generated by the Type Library importer or Type Libary Editor.
// Barring syntax errors, the Editor will parse modifications made to the file.
// However, when applying changes via the Editor this file will be regenerated
// and comments or formatting changes will be lost.
// ************************************************************************ //
// File generated on 2014/11/11 0:08:33 (- $Rev: 12980 $, 18834156).

[
  uuid(CE914976-E292-48F4-9DC1-1E26AACFEAB9),
  version(1.0),
  control

]
library ManagerOcxLib
{

  importlib("stdole2.tlb");
  importlib("stdvcl40.dll");
  importlib("RTXCModuleInterface.dll");

  interface IProjectManagerTab;
  dispinterface IProjectManagerTabEvents;
  coclass ProjectManagerTab;


  [
    uuid(C5905E54-A3E6-4137-958A-52AADB069EE3)
  ]
  enum TxActiveFormBorderStyle
  {
    [helpstring("afbNone")]
    afbNone = 0,
    [helpstring("afbSingle")]
    afbSingle = 1,
    [helpstring("afbSunken")]
    afbSunken = 2,
    [helpstring("afbRaised")]
    afbRaised = 3
  };

  [
    uuid(C6BC55A6-A9DA-4BF6-A3FC-C1FB71FCF712)
  ]
  enum TxPrintScale
  {
    [helpstring("poNone")]
    poNone = 0,
    [helpstring("poProportional")]
    poProportional = 1,
    [helpstring("poPrintToFit")]
    poPrintToFit = 2
  };

  [
    uuid(2BE30BDB-1B38-4EF7-BDFF-E7149FF1D6D9)
  ]
  enum TxMouseButton
  {
    [helpstring("mbLeft")]
    mbLeft = 0,
    [helpstring("mbRight")]
    mbRight = 1,
    [helpstring("mbMiddle")]
    mbMiddle = 2
  };

  [
    uuid(C86FCEB2-B514-4F1E-97AF-46B0EDE35DCE)
  ]
  enum TxPopupMode
  {
    [helpstring("pmNone")]
    pmNone = 0,
    [helpstring("pmAuto")]
    pmAuto = 1,
    [helpstring("pmExplicit")]
    pmExplicit = 2
  };

  [
    custom(8B342977-45CB-4A01-A8F2-E47B61F3539E, 0)
  ]
  typedef IFontDisp** PPUserType1;

  [
    uuid(5DC0FD40-5A62-4F93-98EF-BF43AFCC4430),
    helpstring("Dispatch interface for ProjectManagerTab Control"),
    dual,
    oleautomation
  ]
  interface IProjectManagerTab: IDispatch
  {
    [propget, id(0x000000C9), hidden]
    HRESULT _stdcall Visible([out, retval] VARIANT_BOOL* Value);
    [propput, id(0x000000C9), hidden]
    HRESULT _stdcall Visible([in] VARIANT_BOOL Value);
    [propget, id(0x000000CA)]
    HRESULT _stdcall AutoScroll([out, retval] VARIANT_BOOL* Value);
    [propput, id(0x000000CA)]
    HRESULT _stdcall AutoScroll([in] VARIANT_BOOL Value);
    [propget, id(0x000000CB)]
    HRESULT _stdcall AutoSize([out, retval] VARIANT_BOOL* Value);
    [propput, id(0x000000CB)]
    HRESULT _stdcall AutoSize([in] VARIANT_BOOL Value);
    [propget, id(0x000000CC)]
    HRESULT _stdcall AxBorderStyle([out, retval] enum TxActiveFormBorderStyle* Value);
    [propput, id(0x000000CC)]
    HRESULT _stdcall AxBorderStyle([in] enum TxActiveFormBorderStyle Value);
    [propget, id(0x000000CD)]
    HRESULT _stdcall BorderWidth([out, retval] long* Value);
    [propput, id(0x000000CD)]
    HRESULT _stdcall BorderWidth([in] long Value);
    [propget, id(0xFFFFFDFA)]
    HRESULT _stdcall Caption([out, retval] BSTR* Value);
    [propput, id(0xFFFFFDFA)]
    HRESULT _stdcall Caption([in] BSTR Value);
    [propget, id(0xFFFFFE0B)]
    HRESULT _stdcall Color([out, retval] OLE_COLOR* Value);
    [propput, id(0xFFFFFE0B)]
    HRESULT _stdcall Color([in] OLE_COLOR Value);
    [propget, id(0xFFFFFE00)]
    HRESULT _stdcall Font([out, retval] IFontDisp** Value);
    [propput, id(0xFFFFFE00)]
    HRESULT _stdcall Font([in] IFontDisp* Value);
    [propputref, id(0xFFFFFE00)]
    HRESULT _stdcall Font([in] IFontDisp** Value);
    [propget, id(0x000000CE)]
    HRESULT _stdcall KeyPreview([out, retval] VARIANT_BOOL* Value);
    [propput, id(0x000000CE)]
    HRESULT _stdcall KeyPreview([in] VARIANT_BOOL Value);
    [propget, id(0x000000CF)]
    HRESULT _stdcall PixelsPerInch([out, retval] long* Value);
    [propput, id(0x000000CF)]
    HRESULT _stdcall PixelsPerInch([in] long Value);
    [propget, id(0x000000D0)]
    HRESULT _stdcall PrintScale([out, retval] enum TxPrintScale* Value);
    [propput, id(0x000000D0)]
    HRESULT _stdcall PrintScale([in] enum TxPrintScale Value);
    [propget, id(0x000000D1)]
    HRESULT _stdcall Scaled([out, retval] VARIANT_BOOL* Value);
    [propput, id(0x000000D1)]
    HRESULT _stdcall Scaled([in] VARIANT_BOOL Value);
    [propget, id(0x000000D2), hidden]
    HRESULT _stdcall Active([out, retval] VARIANT_BOOL* Value);
    [propget, id(0x000000D3), hidden]
    HRESULT _stdcall DropTarget([out, retval] VARIANT_BOOL* Value);
    [propput, id(0x000000D3), hidden]
    HRESULT _stdcall DropTarget([in] VARIANT_BOOL Value);
    [propget, id(0x000000D4), hidden]
    HRESULT _stdcall HelpFile([out, retval] BSTR* Value);
    [propput, id(0x000000D4), hidden]
    HRESULT _stdcall HelpFile([in] BSTR Value);
    [propget, id(0x000000D5), hidden]
    HRESULT _stdcall PopupMode([out, retval] enum TxPopupMode* Value);
    [propput, id(0x000000D5), hidden]
    HRESULT _stdcall PopupMode([in] enum TxPopupMode Value);
    [propget, id(0x000000D6), hidden]
    HRESULT _stdcall ScreenSnap([out, retval] VARIANT_BOOL* Value);
    [propput, id(0x000000D6), hidden]
    HRESULT _stdcall ScreenSnap([in] VARIANT_BOOL Value);
    [propget, id(0x000000D7), hidden]
    HRESULT _stdcall SnapBuffer([out, retval] long* Value);
    [propput, id(0x000000D7), hidden]
    HRESULT _stdcall SnapBuffer([in] long Value);
    [propget, id(0x000000D8), hidden]
    HRESULT _stdcall DockSite([out, retval] VARIANT_BOOL* Value);
    [propput, id(0x000000D8), hidden]
    HRESULT _stdcall DockSite([in] VARIANT_BOOL Value);
    [propget, id(0x000000D9), hidden]
    HRESULT _stdcall DoubleBuffered([out, retval] VARIANT_BOOL* Value);
    [propput, id(0x000000D9), hidden]
    HRESULT _stdcall DoubleBuffered([in] VARIANT_BOOL Value);
    [propget, id(0x000000DA), hidden]
    HRESULT _stdcall AlignDisabled([out, retval] VARIANT_BOOL* Value);
    [propget, id(0x000000DB), hidden]
    HRESULT _stdcall MouseInClient([out, retval] VARIANT_BOOL* Value);
    [propget, id(0x000000DC), hidden]
    HRESULT _stdcall VisibleDockClientCount([out, retval] long* Value);
    [propget, id(0x000000DD), hidden]
    HRESULT _stdcall ParentDoubleBuffered([out, retval] VARIANT_BOOL* Value);
    [propput, id(0x000000DD), hidden]
    HRESULT _stdcall ParentDoubleBuffered([in] VARIANT_BOOL Value);
    [propget, id(0x000000DE), hidden]
    HRESULT _stdcall UseDockManager([out, retval] VARIANT_BOOL* Value);
    [propput, id(0x000000DE), hidden]
    HRESULT _stdcall UseDockManager([in] VARIANT_BOOL Value);
    [propget, id(0xFFFFFDFE), hidden]
    HRESULT _stdcall Enabled([out, retval] VARIANT_BOOL* Value);
    [propput, id(0xFFFFFDFE), hidden]
    HRESULT _stdcall Enabled([in] VARIANT_BOOL Value);
    [propget, id(0x000000DF), hidden]
    HRESULT _stdcall ExplicitLeft([out, retval] long* Value);
    [propget, id(0x000000E0), hidden]
    HRESULT _stdcall ExplicitTop([out, retval] long* Value);
    [propget, id(0x000000E1), hidden]
    HRESULT _stdcall ExplicitWidth([out, retval] long* Value);
    [propget, id(0x000000E2), hidden]
    HRESULT _stdcall ExplicitHeight([out, retval] long* Value);
    [propget, id(0x000000E3)]
    HRESULT _stdcall AlignWithMargins([out, retval] VARIANT_BOOL* Value);
    [propput, id(0x000000E3)]
    HRESULT _stdcall AlignWithMargins([in] VARIANT_BOOL Value);
    [propget, id(0x000000E4)]
    HRESULT _stdcall ParentCustomHint([out, retval] VARIANT_BOOL* Value);
    [propput, id(0x000000E4)]
    HRESULT _stdcall ParentCustomHint([in] VARIANT_BOOL Value);
  };

  [
    uuid(4C05950F-A4F9-4193-8189-4448AA699DBE),
    helpstring("Events interface for ProjectManagerTab Control")
  ]
  dispinterface IProjectManagerTabEvents
  {
    properties:
    methods:
    [id(0x000000C9)]
    void OnActivate(void);
    [id(0x000000CA)]
    void OnClick(void);
    [id(0x000000CB)]
    void OnCreate(void);
    [id(0x000000CC)]
    void OnDblClick(void);
    [id(0x000000CD)]
    void OnDestroy(void);
    [id(0x000000CE)]
    void OnDeactivate(void);
    [id(0x000000CF)]
    void OnKeyPress([in, out] short* Key);
    [id(0x000000D0)]
    void OnMouseEnter(void);
    [id(0x000000D1)]
    void OnMouseLeave(void);
    [id(0x000000D2)]
    void OnPaint(void);
  };

  [
    uuid(6FA77186-AF8D-4B6B-AC5C-6B25F29AA5E0),
    helpstring("ProjectManagerTab Control"),
    control
  ]
  coclass ProjectManagerTab
  {
    [default] interface IProjectManagerTab;
    [default, source] dispinterface IProjectManagerTabEvents;
  };

};
